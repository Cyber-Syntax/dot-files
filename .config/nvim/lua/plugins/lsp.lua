return {
  -- "neovim/nvim-lspconfig",
  -- opts = {
  --   servers = {
  --     ruff = {
  --       cmd_env = { RUFF_TRACE = "messages" },
  --       init_options = {
  --         settings = {
  --           logLevel = "error",
  --         },
  --       },
  --       keys = {
  --         {
  --           "<leader>co",
  --           LazyVim.lsp.action["source.organizeImports"],
  --           desc = "Organize Imports",
  --         },
  --       },
  --     },
  --     pyright = {
  --       settings = {
  --         python = {
  --           analysis = {
  --             autoSearchPaths = true,
  --             diagnosticMode = "openFileOnly",
  --             typeCheckingMode = "basic",
  --           },
  --         },
  --       },
  --     },
  --   },
  --   setup = {
  --     [ruff] = function()
  --       LazyVim.lsp.on_attach(function(client, _)
  --         -- Disable hover in favor of Pyright
  --         client.server_capabilities.hoverProvider = false
  --       end, ruff)
  --     end,
  --   },
  --   opts = function(_, opts)
  --     local servers = { "pyright", "basedpyright", "ruff", ruff, lsp }
  --     for _, server in ipairs(servers) do
  --       opts.servers[server] = opts.servers[server] or {}
  --       opts.servers[server].enabled = server == lsp or server == ruff
  --     end
  --   end,
  -- },

  -- "neovim/nvim-lspconfig",
  -- ---@class PluginLspOpts
  -- opts = {
  --   servers = {
  --     ruff = {
  --       cmd_env = { RUFF_TRACE = "messages" },
  --       init_options = {
  --         settings = {
  --           logLevel = "error",
  --         },
  --       },
  --     },
  --     -- pyright will be automatically installed with mason and loaded with lspconfig
  --     pyright = {
  --       settings = {
  --         python = {
  --           analysis = {
  --             autoSearchPaths = true,
  --             diagnosticMode = "openFileOnly",
  --             typeCheckingMode = "basic",
  --           },
  --         },
  --       },
  --     },
  --     marksman = { mason = false },
  --     bashls = {},
  --   },
  --   diagnostics = {
  --     virtual_text = true,
  --     update_in_insert = false,
  --   },
  --   inlay_hints = {
  --     enabled = true,
  --     -- exclude = { "vue" }, -- filetypes for which you don't want to enable inlay hints
  --   },
  -- },
}
