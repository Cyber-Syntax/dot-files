{ config, pkgs, lib, ... }:

let
# add unstable channel declaratively
  unstableTarball =
    fetchTarball
      https://github.com/NixOS/nixpkgs/archive/nixos-unstable.tar.gz;
in

{  

  disabledModules = [ "services/misc/ollama.nix" ];

  imports =
    [ 
      (unstableTarball + "/nixos/modules/services/misc/ollama.nix")
    ];

  nixpkgs.config = {
    packageOverrides = pkgs: {
      unstable = import unstableTarball {
        config = config.nixpkgs.config;
      };
    };
  };

  # use unstable if you want to use the package from the unstable channel
  environment.systemPackages = with pkgs; [
     unstable.freetube
     unstable.obsidian
     unstable.spotube
     unstable.planify
  ];

  # add the service with options from the unstable channel
  services = {
      ollama = {
          enable = true;
          acceleration = "cuda"; # enable nvidia cuda, or rocm
          package = pkgs.unstable.ollama; # also use the package from the unstable channel!
          
          models = "/home/ollama/models";
          home = "/home/ollama";
          group = "ollama";               
          user = "ollama";

          openFirewall = true;

          environmentVariables = {
            OLLAMA_LLM_LIBRARY = "gpu";
            CUDA_VISIBLE_DEVICES = "0";
          };
            
      };
  };

  # override unstable ollama ProtectHome=true to empty string
       #   error: The option `systemd.services.ollama.serviceConfig.ProtectHome' has conflicting definition values:
       # - In `/etc/nixos/unstable.nix': ""
       # - In `/nix/store/bcghcr9qwqmanpds017w75mcqda4fgab-source/nixos/modules/services/misc/ollama.nix': true
       # Use `lib.mkForce value` or `lib.mkDefault value` to change the priority on any of these definitions.
  systemd.services.ollama.serviceConfig.ProtectHome = lib.mkForce "";

}

